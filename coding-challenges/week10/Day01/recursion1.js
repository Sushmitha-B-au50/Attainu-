// Week 10 – Day 1: Coding Challenge
// (Maximum marks - 15)
// AttainU Id: #68
// Q-1 ) Recursive implementation of atoi() function:(15 marks)
// Atoi() function converts a string into an integer.
// eg:
// st = “1234” is a string.
// if we perform,
// st + 1
// this results in error since “st” is a string and 1 is an integer, and,
// st + “1”
// this will append 1 into 1234. Giving us 12341.
// Marks distribution:
// Question 1 carry 15 marks

let str = "12345";
 let n =str.length;
let output = 0;
let i=0;
function Atoi(str,i){
    if(i==n) return output;
    else{
    output += (str[i]/10);    
    output = output*10;
    return  Atoi(str,i+1);
    } 
}

console.log(Atoi(str,i));


// / / /####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */

//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */

//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */