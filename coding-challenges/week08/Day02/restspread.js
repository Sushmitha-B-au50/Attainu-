// Week 8 â€“ Day 2: Coding Challenge
// (Maximum marks - 15)
// AttainU Id: #45
// Q-1) Write a program to pass spread operator as argument and rest operator as parameter of a
// function.
// Marks distribution:
// Question 1 carry 15 marks

let b = [1,2,3,4,5];

let addArray = (...a) =>   ///parameter  rest operator (rest will take the values and add a square brackets)
{ 
    a.push(7);
   return newarr = a;
}
   
console.log(addArray(...b)); // arugument spread opeartor (spread will remove squre brackets)

// / / /####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */

//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */

//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */