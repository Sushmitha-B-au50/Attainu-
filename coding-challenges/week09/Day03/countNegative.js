// Week 9 â€“ Day 3: Coding Challenge
// (Maximum marks - 15)
// AttainU Id: #63
// Q.1 -> https://leetcode.com/problems/count-negative-numbers-in-a-sorted-matrix/


var countNegatives = function(grid) {
    let count = 0;
    let totalRows =grid.length;
    let totalColumns= grid[0].length;
    for(i=0;i<totalRows;i++)
    {
      for(j=0;j<totalColumns;j++)
      {
         if(grid[i][j]<0)
          {
              count += 1;
          }
      }
    }
    return count;     
};

console.log(countNegatives([[4,3,2,-1],[3,2,1,-1],[1,1,-1,-2],[-1,-1,-2,-3]]));


// / / /####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */

//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */

//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */