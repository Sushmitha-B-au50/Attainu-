// Week 14 â€“ Day 2: Coding Challenge
// (Maximum marks - 15)
// AttainU Id: #109
// https://leetcode.com/problems/balanced-binary-tree/
// Marks distribution:
// Question 1 carry 15 marks


class Node {
    constructor(val){
        this.val = val;
        this.left = null;
        this.right = null;
    }
}

let node1 = new Node(2);
let node2 = new Node(1);
let node3 = new Node(3);
let node4 = new Node(4);

//    2
//  1   3
//        4
node1.left = node2;
node3.right = node4;
node1.right = node3;
let root = node1;


var isBalanced = function(root) {
    let flag = true;
    var height =  function(root){
    if(root==null) return 0;
    let lsh = height(root.left);
    let rsh = height(root.right);
    let res = lsh-rsh;
    if(res < -1 || res > 1) flag = false; 
   return Math.max(lsh,rsh) + 1; 
    }
  height(root); 
  return flag;  
};

console.log(isBalanced(root));

// / / /####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */

//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */

//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//####################################################
//#####################################################
//################################################
//###############################################
//###############################################
//##############################################
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */
//********************************************************
// *************************************
//  */***********************************
// *******************************************
// ******************** */



